{"remainingRequest":"/Volumes/Aaron/aaron-workspace/vuejs/helloworld/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Aaron/aaron-workspace/vuejs/helloworld/my-app/src/components/HelloWorld.vue?vue&type=style&index=1&id=e9fc3d64&scoped=true&lang=css&","dependencies":[{"path":"/Volumes/Aaron/aaron-workspace/vuejs/helloworld/my-app/src/components/HelloWorld.vue","mtime":1563240935000},{"path":"/Volumes/Aaron/aaron-workspace/vuejs/helloworld/my-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Aaron/aaron-workspace/vuejs/helloworld/my-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Aaron/aaron-workspace/vuejs/helloworld/my-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Aaron/aaron-workspace/vuejs/helloworld/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Aaron/aaron-workspace/vuejs/helloworld/my-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.calculator {\n  margin: auto;\n  width: 100vw;\n  font-size: 2rem;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-rows: minmax(10vh, auto);\n  border: 1px solid #111;\n  line-height: 10vh;\n}\n\n.display {\n  grid-column: 1 / 5;\n  background-color: #ececec;    \n  border: 1px solid #111;\n  font-size: 2.5rem;\n  cursor: default;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0 1rem;\n}\n\n.zero {\n  grid-column: 1 / 2;\n}\n\n.button {\n  background-color: hsl(0, 0%, 75%);\n  border: 1px solid #111;\n  cursor: pointer;\n}\n\n.operator {\n  background-color: hsl(73, 60%, 60%);\n}\n\n.darker {\n  background-color: hsl(0, 0%, 65%);\n}\n\n@media only screen and (min-width: 768px) {\n  .calculator {\n    width: 50vw;\n    grid-auto-rows: minmax(7.5vh, auto);\n    line-height: 7.5vh;\n  }\n}\n\n@media only screen and (min-width: 1024px) {\n  .calculator {\n    width: 30vw;\n    grid-auto-rows: minmax(7.5vh, auto);\n    line-height: 7.5vh;\n  }\n}\n\n@media only screen and (min-width: 1280px) {\n  .calculator {\n    width: 20vw;\n  }\n}\n\n@media only screen and (min-width: 1600px) {\n  .calculator {\n    width: 15vw;\n  }\n}\n",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["\n<template>\n  \n  <div class='calculator' onselectstart='return false'>\n     \n\n    <!--div class=\"hello\"><h1>{{ msg }}</h1></div-->\n    <div class='display'>{{display}}</div>\n    <div @click='clear' class='button darker'>C</div>\n    <div @click='sign' class='button darker'>+/-</div>\n    <div @click='percent' class='button darker'>%</div>\n    <div @click='inverse' class='button darker'>1/x</div>\n    <div @click='ob' class='button darker'>(</div>\n    <div @click='cb' class='button darker'>)</div>\n    <div @click='SqRt' class='button darker'>^</div>\n    <div @click='divide' class='button operator'>รท</div>\n    <div @click='append(7)' class='button'>7</div>\n    <div @click='append(8)' class='button'>8</div>\n    <div @click='append(9)' class='button'>9</div>\n    <div @click='multiply' class='button operator'>x</div>\n    <div @click='append(4)' class='button'>4</div>\n    <div @click='append(5)' class='button'>5</div>\n    <div @click='append(6)' class='button'>6</div>\n    <div @click='subtract' class='button operator'>-</div>\n    <div @click='append(1)' class='button'>1</div>\n    <div @click='append(2)' class='button'>2</div>\n    <div @click='append(3)' class='button'>3</div>\n    <div @click='add' class='button operator'>+</div>\n    <div @click='append(0)' class='button zero'>0</div>\n    <div @click='fac' class='button'>x!</div>\n    <div @click='decimal' class='button'>.</div>\n    <div @click='equal' class='button'>=</div>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  data() {\n    return {\n      previous: null,\n      display: 0,\n      operator: null,\n      operatorClicked: false\n    };\n  },\n  methods: {\n    clear() {\n      this.display = 0;\n    },\n    sign() {\n      this.display =\n        this.display < 0\n          ? (this.display = this.display - this.display * 2)\n          : (this.display = this.display - this.display * 2);\n    },\n    percent() {\n      this.display = this.display / 100;\n    },\n    append(number) {\n      if (this.operatorClicked === true) {\n        this.display = '';\n        this.operatorClicked = false;\n      }\n      this.display =\n        this.display === 0\n          ? (this.display = number)\n          : '' + this.display + number;\n    },\n    decimal() {\n      if (this.display.indexOf('.') === -1) {\n        this.append('.');\n      }\n    },\n    divide() {\n      this.operator = (a, b) => a / b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    multiply() {\n      this.operator = (a, b) => a * b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    subtract() {\n      this.operator = (a, b) => a - b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    add() {\n      this.operator = (a, b) => a + b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    equal() {\n      this.display = this.operator(Number(this.previous), Number(this.display));\n      this.previous = null;\n      this.operatorClicked = true;\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 10px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n\n<style scoped>\n.calculator {\n  margin: auto;\n  width: 100vw;\n  font-size: 2rem;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-rows: minmax(10vh, auto);\n  border: 1px solid #111;\n  line-height: 10vh;\n}\n\n.display {\n  grid-column: 1 / 5;\n  background-color: #ececec;    \n  border: 1px solid #111;\n  font-size: 2.5rem;\n  cursor: default;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0 1rem;\n}\n\n.zero {\n  grid-column: 1 / 2;\n}\n\n.button {\n  background-color: hsl(0, 0%, 75%);\n  border: 1px solid #111;\n  cursor: pointer;\n}\n\n.operator {\n  background-color: hsl(73, 60%, 60%);\n}\n\n.darker {\n  background-color: hsl(0, 0%, 65%);\n}\n\n@media only screen and (min-width: 768px) {\n  .calculator {\n    width: 50vw;\n    grid-auto-rows: minmax(7.5vh, auto);\n    line-height: 7.5vh;\n  }\n}\n\n@media only screen and (min-width: 1024px) {\n  .calculator {\n    width: 30vw;\n    grid-auto-rows: minmax(7.5vh, auto);\n    line-height: 7.5vh;\n  }\n}\n\n@media only screen and (min-width: 1280px) {\n  .calculator {\n    width: 20vw;\n  }\n}\n\n@media only screen and (min-width: 1600px) {\n  .calculator {\n    width: 15vw;\n  }\n}\n</style>\n"]}]}